// The city council passed a new zoning ordinance mandating that no more than k consecutive billboards may be up at any given time. 
// For example, if there are n billboards on Main street and k=1, 
// ADZEN must remove either the middle billboard, the first two billboards, the last two billboards or the first and last billboard.
// They want to comply with the new ordinance in such a way that the remaining billboards maximize their total revenues 
// (i.e., the sum of revenues generated by the billboards left standing on Main street).

// Given n, k, and the revenue of each of the n billboards, find and print the maximum profit that ADZEN can earn 
// while complying with the zoning ordinance. Assume that Main street is a straight, contiguous block of n billboards that can be removed 
// but cannot be reordered in any way.

// For example, if there are n=7 billboards, and k=3 is the maximum number of consecutive billboards that can be active, 
// with revenues = [5,6,4,2,10,8,4], then the maximum revenue that can be generated is 37:5 + 6 + 4 + 10 + 8 + 4 = 37.

// Complete the 'billboards' function below.
//  *
//  * The function is expected to return an INTEGER.
//  * The function accepts following parameters:
//  *  1. INTEGER k
//  *  2. INTEGER_ARRAY revenue

function billboards(k, revenue) {
  // Write your code here
  // define variables for handling of input parameters
  const numBillboards = revenue.length
  const limitAdjacent = k
  let arrRevenue = []
  // maybe unnecessary intermediary step
  for (let i=0; i<revenue.length; i++ ) {
      arrRevenue.push(revenue[i])
  }
  console.log(arrRevenue)
  // sorted revenue array into smallest to biggest numbers
  let sortedArrRev = arrRevenue.sort()
  console.log(sortedArrRev)

  // need splice() I think
  for (let element of arrRevenue) {
    sortedArrRev.splice(numBillboards)
  }
  console.log(arrRevenue)

}

billboards(1, [5,3,8,1])